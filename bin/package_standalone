#!/bin/bash

###########################################################################
# Packaging script which creates standalone package.
#
# Usage:
#> bin/package_standalone <os>
#
# Package (specific OS: linux, darwin, windows):
#> bin/package_standalone linux
#
# Package (specific binary):
#> BINARY=build/myst/myst_darwin_amd64 bin/package_standalone darwin

set -e

source bin/helpers/output.sh
source bin/helpers/functions.sh

OS=$1
if [[ ! "$OS" =~ ^(linux|darwin|windows)$ ]]; then
    print_error "Missing OS! Should be: linux, darwin or windows"
    exit 1
fi

BINARY=${BINARY:-"build/myst/myst"}
DIR_BUILD="build/package"
mkdir -p $DIR_BUILD

# Put all files to package directory (to avoid preserving directory structure)
printf "Building Standalone package for OS '$OS' ..\n"
DIR_TEMP=`mktemp -d ${DIR_BUILD}/${tempname}.XXXXXX`

if [ "$OS" == "windows" ]; then
    cp -vp ${BINARY} ${DIR_TEMP}/myst.exe
else
    cp -vp ${BINARY} ${DIR_TEMP}/myst
fi
copy_config $OS $DIR_TEMP
if [ "$OS" == "windows" ]; then
    cp -vp build/myst_supervisor/myst_supervisor.exe ${DIR_TEMP}/myst_supervisor.exe
else
    cp -vp build/myst_supervisor/myst_supervisor ${DIR_TEMP}/myst_supervisor
fi

# Tarball package directory
if [ "$OS" == "windows" ]; then
    PACKAGE_FILE="${DIR_BUILD}/`basename -s .exe ${BINARY}`.zip"
    (cd ${DIR_TEMP} && zip -r - .) > ${PACKAGE_FILE}
else
    PACKAGE_FILE="${DIR_BUILD}/`basename ${BINARY}`.tar.gz"
    tar -zcv -f ${PACKAGE_FILE} -C ${DIR_TEMP} .
fi
rm -rf ${DIR_TEMP}

print_success "Standalone package '$PACKAGE_FILE' complete!"

